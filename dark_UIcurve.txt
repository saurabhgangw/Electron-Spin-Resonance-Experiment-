{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import required libraries for numerical operations, plotting, and optimization\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy import optimize\n",
    "from scipy import constants"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define file paths for data and output\n",
    "data_dir = \"C:\\\\Users\\\\Saurabh Gangwar\\\\Desktop\\\\ALC WP-1\\\\Photovoltaic - Function and Electrical Characterization of Solar Cells\\\\Dark curve measurement\\\\data\\\\\"\n",
    "save_dir = \"C:\\\\Users\\\\Saurabh Gangwar\\\\Desktop\\\\ALC WP-1\\\\Photovoltaic - Function and Electrical Characterization of Solar Cells\\\\Dark curve measurement\\\\\"\n",
    "\n",
    "# Specify input file names\n",
    "crystalline_file = \"dark_crystalline.txt\"\n",
    "amorphous_file = \"dark_amorphous.txt\"\n",
    "\n",
    "# Load data from text files\n",
    "crystalline_data = np.loadtxt(data_dir + crystalline_file)\n",
    "amorphous_data = np.loadtxt(data_dir + amorphous_file)\n",
    "\n",
    "# Extract voltage and current for crystalline and amorphous cells\n",
    "volt_cryst = crystalline_data[:, 0]  # Voltage in V\n",
    "curr_cryst = crystalline_data[:, 1]  # Current in mA\n",
    "volt_amorph = amorphous_data[:, 0]   # Voltage in V\n",
    "curr_amorph = amorphous_data[:, 1]   # Current in ÂµA\n",
    "\n",
    "# Display amorphous current data\n",
    "print(curr_amorph)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to set plot font sizes for consistency\n",
    "def configure_plot_fonts(size):\n",
    "    plt.rcParams['font.size'] = size\n",
    "    plt.rcParams['axes.titlesize'] = size\n",
    "    plt.rcParams['axes.labelsize'] = size\n",
    "    plt.rcParams['xtick.labelsize'] = size\n",
    "    plt.rcParams['ytick.labelsize'] = size\n",
    "    plt.rcParams['legend.fontsize'] = size\n",
    "\n",
    "# Plot saving settings\n",
    "save_figure = False\n",
    "transparent_bg = True"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Apply font settings and define figure size\n",
    "configure_plot_fonts(18)\n",
    "plot_size = (8, 6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the diode equation for curve fitting\n",
    "def diode_model(voltage, ideality, saturation_current):\n",
    "    return saturation_current * (np.exp(constants.elementary_charge * voltage / (ideality * constants.Boltzmann * 293)) - 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fit the diode model to crystalline data\n",
    "params_cryst, cov_cryst = optimize.curve_fit(diode_model, volt_cryst, curr_cryst)\n",
    "\n",
    "# Generate points for smooth crystalline curve\n",
    "volt_fit_cryst = np.linspace(0, 0.58, 1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fit the diode model to amorphous data\n",
    "params_amorph, cov_amorph = optimize.curve_fit(diode_model, volt_amorph, curr_amorph)\n",
    "\n",
    "# Generate points for smooth amorphous curve\n",
    "volt_fit_amorph = np.linspace(0, max(volt_amorph), 1000)\n",
    "\n",
    "# Create plot for amorphous data\n",
    "fig, ax = plt.subplots(figsize=plot_size)\n",
    "ax.plot(volt_amorph, curr_amorph, 'o', label='Amorphous Data Points')\n",
    "ax.plot(volt_fit_amorph, diode_model(volt_fit_amorph, *params_amorph), label='Fitted Curve')\n",
    "ax.set_xlabel('Voltage (V)')\n",
    "ax.set_ylabel('Current ($\\mu$A)')\n",
    "ax.grid(True)\n",
    "ax.legend()\n",
    "plt.show()\n",
    "\n",
    "# Save plot if enabled\n",
    "if save_figure:\n",
    "    fig.savefig(save_dir + 'dark_amorphous.pdf', transparent=transparent_bg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Display fitted parameters for both cell types\n",
    "print('Crystalline Fit Parameters (saturation_current, ideality):', params_cryst)\n",
    "print('Amorphous Fit Parameters (saturation_current, ideality):', params_amorph)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.2"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}